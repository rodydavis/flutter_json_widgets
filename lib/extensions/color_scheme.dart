import 'package:flutter/material.dart' as material;

import '../material.dart';
import '../extensions.dart';

extension ColorSchemeUtils on ColorScheme {
  material.ColorScheme toFlutter(material.BuildContext context) {
    return map(
      (data) => material.ColorScheme(
        brightness: data.brightness.toFlutter(context),
        primary: data.primary.toFlutter(context),
        onPrimary: data.onPrimary.toFlutter(context),
        primaryContainer: data.primaryContainer?.toFlutter(context),
        onPrimaryContainer: data.onPrimaryContainer?.toFlutter(context),
        secondary: data.secondary.toFlutter(context),
        onSecondary: data.onSecondary.toFlutter(context),
        secondaryContainer: data.secondaryContainer?.toFlutter(context),
        onSecondaryContainer: data.onSecondaryContainer?.toFlutter(context),
        tertiary: data.tertiary?.toFlutter(context),
        onTertiary: data.onTertiary?.toFlutter(context),
        tertiaryContainer: data.tertiaryContainer?.toFlutter(context),
        onTertiaryContainer: data.onTertiaryContainer?.toFlutter(context),
        error: data.error.toFlutter(context),
        onError: data.onError.toFlutter(context),
        errorContainer: data.errorContainer?.toFlutter(context),
        onErrorContainer: data.onErrorContainer?.toFlutter(context),
        background: data.background.toFlutter(context),
        onBackground: data.onBackground.toFlutter(context),
        surface: data.surface.toFlutter(context),
        onSurface: data.onSurface.toFlutter(context),
        surfaceVariant: data.surfaceVariant?.toFlutter(context),
        onSurfaceVariant: data.onSurfaceVariant?.toFlutter(context),
        outline: data.outline?.toFlutter(context),
        outlineVariant: data.outlineVariant?.toFlutter(context),
        shadow: data.shadow?.toFlutter(context),
        scrim: data.scrim?.toFlutter(context),
        inverseSurface: data.inverseSurface?.toFlutter(context),
        onInverseSurface: data.onInverseSurface?.toFlutter(context),
        inversePrimary: data.inversePrimary?.toFlutter(context),
        surfaceTint: data.surfaceTint?.toFlutter(context),
      ),
      fromSeed: (data) => material.ColorScheme.fromSeed(
        seedColor: data.seedColor.toFlutter(context),
        brightness: data.brightness.toFlutter(context),
        primary: data.primary?.toFlutter(context),
        onPrimary: data.onPrimary?.toFlutter(context),
        primaryContainer: data.primaryContainer?.toFlutter(context),
        onPrimaryContainer: data.onPrimaryContainer?.toFlutter(context),
        secondary: data.secondary?.toFlutter(context),
        onSecondary: data.onSecondary?.toFlutter(context),
        secondaryContainer: data.secondaryContainer?.toFlutter(context),
        onSecondaryContainer: data.onSecondaryContainer?.toFlutter(context),
        tertiary: data.tertiary?.toFlutter(context),
        onTertiary: data.onTertiary?.toFlutter(context),
        tertiaryContainer: data.tertiaryContainer?.toFlutter(context),
        onTertiaryContainer: data.onTertiaryContainer?.toFlutter(context),
        error: data.error?.toFlutter(context),
        onError: data.onError?.toFlutter(context),
        errorContainer: data.errorContainer?.toFlutter(context),
        onErrorContainer: data.onErrorContainer?.toFlutter(context),
        outline: data.outline?.toFlutter(context),
        outlineVariant: data.outlineVariant?.toFlutter(context),
        background: data.background?.toFlutter(context),
        onBackground: data.onBackground?.toFlutter(context),
        surface: data.surface?.toFlutter(context),
        onSurface: data.onSurface?.toFlutter(context),
        surfaceVariant: data.surfaceVariant?.toFlutter(context),
        onSurfaceVariant: data.onSurfaceVariant?.toFlutter(context),
        inverseSurface: data.inverseSurface?.toFlutter(context),
        onInverseSurface: data.onInverseSurface?.toFlutter(context),
        inversePrimary: data.inversePrimary?.toFlutter(context),
        shadow: data.shadow?.toFlutter(context),
        scrim: data.scrim?.toFlutter(context),
        surfaceTint: data.surfaceTint?.toFlutter(context),
      ),
    );
  }
}
