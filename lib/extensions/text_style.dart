import 'package:flutter/material.dart' as material;

import '../material.dart';
import '../extensions.dart';

extension TextStyleUtils on TextStyle {
  material.TextStyle toFlutter(material.BuildContext context) {
    final fonts = material.Theme.of(context).textTheme;
    return map(
      (data) => material.TextStyle(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      displayLarge: (data) => fonts.displayLarge!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      displayMedium: (data) => fonts.displayMedium!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      displaySmall: (data) => fonts.displaySmall!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      headlineLarge: (data) => fonts.headlineLarge!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      headlineMedium: (data) => fonts.headlineMedium!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      headlineSmall: (data) => fonts.headlineSmall!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      bodyLarge: (data) => fonts.bodyLarge!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      bodyMedium: (data) => fonts.bodyMedium!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      bodySmall: (data) => fonts.bodySmall!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      titleLarge: (data) => fonts.titleLarge!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      titleMedium: (data) => fonts.titleMedium!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      titleSmall: (data) => fonts.titleSmall!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      labelLarge: (data) => fonts.labelLarge!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      labelMedium: (data) => fonts.labelMedium!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
      labelSmall: (data) => fonts.labelSmall!.copyWith(
        inherit: data.inherit,
        color: data.color?.toFlutter(context),
        backgroundColor: data.backgroundColor?.toFlutter(context),
        fontSize: data.fontSize,
        fontWeight: data.fontWeight?.toFlutter(context),
        fontStyle: data.fontStyle?.toFlutter(context),
        letterSpacing: data.letterSpacing,
        wordSpacing: data.wordSpacing,
        textBaseline: data.textBaseline?.toFlutter(context),
        height: data.height,
        leadingDistribution: data.leadingDistribution?.toFlutter(context),
        locale: data.locale?.toFlutter(context),
        foreground: data.foreground?.toFlutter(context),
        background: data.background?.toFlutter(context),
        shadows: data.shadows?.map((e) => e.toFlutter(context)).toList(),
        fontFeatures:
            data.fontFeatures?.map((e) => e.toFlutter(context)).toList(),
        fontVariations:
            data.fontVariations?.map((e) => e.toFlutter(context)).toList(),
        decoration: data.decoration?.toFlutter(context),
        decorationColor: data.decorationColor?.toFlutter(context),
        decorationStyle: data.decorationStyle?.toFlutter(context),
        decorationThickness: data.decorationThickness,
        debugLabel: data.debugLabel,
        fontFamily: data.fontFamily,
        fontFamilyFallback: data.fontFamilyFallback,
        package: data.package,
        overflow: data.overflow?.toFlutter(context),
      ),
    );
  }
}
